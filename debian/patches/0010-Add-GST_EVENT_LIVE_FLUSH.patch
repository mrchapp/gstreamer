From 8e7cb171ea6c734935fbcedd300ca48e3f65b524 Mon Sep 17 00:00:00 2001
From: Alessandro Decina <alessandro.decina@collabora.co.uk>
Date: Fri, 6 May 2011 08:40:26 +0200
Subject: [PATCH 10/10] Add GST_EVENT_LIVE_FLUSH.

This is needed by live sources to unblock buffer_alloc going from PLAYING to
PAUSED.

Currently basesrc assumes that ::create can always be unblocked. When going from
PLAYING to PAUSED it can happen that a live source is blocked in a buffer_alloc
call and so we need a way to unblock it.
---
 gst/gstevent.c |    8 ++++++++
 gst/gstevent.h |    2 ++
 2 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/gst/gstevent.c b/gst/gstevent.c
index 96e99e7..0bb2033 100644
--- a/gst/gstevent.c
+++ b/gst/gstevent.c
@@ -111,6 +111,7 @@ static GstEventQuarks event_quarks[] = {
   {GST_EVENT_UNKNOWN, "unknown", 0},
   {GST_EVENT_FLUSH_START, "flush-start", 0},
   {GST_EVENT_FLUSH_STOP, "flush-stop", 0},
+  {GST_EVENT_LIVE_FLUSH, "live-flush", 0},
   {GST_EVENT_EOS, "eos", 0},
   {GST_EVENT_NEWSEGMENT, "newsegment", 0},
   {GST_EVENT_TAG, "tag", 0},
@@ -462,6 +463,13 @@ gst_event_new_flush_stop (void)
   return gst_event_new (GST_EVENT_FLUSH_STOP);
 }
 
+
+GstEvent *
+gst_event_new_live_flush (void)
+{
+  return gst_event_new (GST_EVENT_LIVE_FLUSH);
+}
+
 /**
  * gst_event_new_eos:
  *
diff --git a/gst/gstevent.h b/gst/gstevent.h
index 8e0ead9..9f410b1 100644
--- a/gst/gstevent.h
+++ b/gst/gstevent.h
@@ -131,6 +131,7 @@ typedef enum {
   /* bidirectional events */
   GST_EVENT_FLUSH_START           = GST_EVENT_MAKE_TYPE (1, FLAG(BOTH)),
   GST_EVENT_FLUSH_STOP            = GST_EVENT_MAKE_TYPE (2, FLAG(BOTH) | FLAG(SERIALIZED)),
+  GST_EVENT_LIVE_FLUSH            = GST_EVENT_MAKE_TYPE (3, FLAG(BOTH)),
   /* downstream serialized events */
   GST_EVENT_EOS                   = GST_EVENT_MAKE_TYPE (5, FLAG(DOWNSTREAM) | FLAG(SERIALIZED)),
   GST_EVENT_NEWSEGMENT            = GST_EVENT_MAKE_TYPE (6, FLAG(DOWNSTREAM) | FLAG(SERIALIZED)),
@@ -424,6 +425,7 @@ void            gst_event_set_seqnum            (GstEvent *event, guint32 seqnum
 /* flush events */
 GstEvent *      gst_event_new_flush_start       (void);
 GstEvent *      gst_event_new_flush_stop        (void);
+GstEvent *      gst_event_new_live_flush        (void);
 
 /* EOS event */
 GstEvent *      gst_event_new_eos               (void);
-- 
1.7.1

